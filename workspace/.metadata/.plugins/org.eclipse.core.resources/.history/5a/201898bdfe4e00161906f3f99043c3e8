package com.client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.BindException;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;

import com.model.Common;

public class Client {
	private Socket socket;
	private ObjectInputStream myin;
	private ObjectOutputStream myout;
	
	//无参构造方法，初始化参数，并连接
	public Client() {
		try {
			socket = new Socket("127.0.0.1", 7777);
			
			/*绑定socket的输入与输出流*/
			myin = new ObjectInputStream(socket.getInputStream());
			myout = new ObjectOutputStream(socket.getOutputStream());
			
		} catch(BindException e) {
			System.out.println("找不到指定的服务器");
		} catch(UnknownHostException e) {
			e.printStackTrace();
		} catch(IOException e) {
			e.printStackTrace();
		}
	}
	
	//断开连接
	private void disConnect() {
		try {
			if (socket != null) {
				socket.close();
			}

			if (myout != null) {
				myout.close();
			}

			if (myin != null) {
				myin.close();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String args[]){
		Client client = new Client();
		String line = null; 
		//绑定输入流
		BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        
        client.disConnect();//断开连接
	}
	//解包，并转发
	private class RecToServer implements Runnable {
		public void run() {
			try {
				while(true){
					Common com = (Common)myin.readObject();
				}
			} catch (SocketException e) {
				System.out.println("服务器拒绝访问");
			} catch (IOException e) {
				e.printStackTrace();
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
}
